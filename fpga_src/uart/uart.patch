diff --git a/fpga_src/uart/rxuartlite.v b/fpga_src/uart/rxuartlite.v
index 85644fd..9711b26 100644
--- a/fpga_src/uart/rxuartlite.v
+++ b/fpga_src/uart/rxuartlite.v
@@ -54,25 +54,8 @@ module rxuartlite #(
 `ifdef	FORMAL
 		parameter  [(TIMER_BITS-1):0]	CLOCKS_PER_BAUD = 16, // Necessary for formal proof
 `else
-		parameter  [(TIMER_BITS-1):0]	CLOCKS_PER_BAUD = 868,	// 115200 MBaud at 100MHz
+		parameter  [(TIMER_BITS-1):0]	CLOCKS_PER_BAUD = 868	// 115200 MBaud at 100MHz
 `endif
-		localparam			TB = TIMER_BITS,
-		//
-		localparam [3:0]	RXUL_BIT_ZERO  = 4'h0,
-		// Verilator lint_off UNUSED
-		// These are used by the formal solver
-		localparam [3:0]	RXUL_BIT_ONE   = 4'h1,
-		localparam [3:0]	RXUL_BIT_TWO   = 4'h2,
-		localparam [3:0]	RXUL_BIT_THREE = 4'h3,
-		localparam [3:0]	RXUL_BIT_FOUR  = 4'h4,
-		localparam [3:0]	RXUL_BIT_FIVE  = 4'h5,
-		localparam [3:0]	RXUL_BIT_SIX   = 4'h6,
-		localparam [3:0]	RXUL_BIT_SEVEN = 4'h7,
-		// Verilator lint_on  UNUSED
-		localparam [3:0]	RXUL_STOP      = 4'h8,
-		localparam [3:0]	RXUL_WAIT      = 4'h9,
-		localparam [3:0]	RXUL_IDLE      = 4'hf
-		// }}}
 	) (
 		// {{{
 		input	wire		i_clk,
@@ -82,6 +65,23 @@ module rxuartlite #(
 		// }}}
 	);
 
+		localparam			TB = TIMER_BITS;
+		//
+		localparam [3:0]	RXUL_BIT_ZERO  = 4'h0;
+		// Verilator lint_off UNUSED
+		// These are used by the formal solver
+		localparam [3:0]	RXUL_BIT_ONE   = 4'h1;
+		localparam [3:0]	RXUL_BIT_TWO   = 4'h2;
+		localparam [3:0]	RXUL_BIT_THREE = 4'h3;
+		localparam [3:0]	RXUL_BIT_FOUR  = 4'h4;
+		localparam [3:0]	RXUL_BIT_FIVE  = 4'h5;
+		localparam [3:0]	RXUL_BIT_SIX   = 4'h6;
+		localparam [3:0]	RXUL_BIT_SEVEN = 4'h7;
+		// Verilator lint_on  UNUSED
+		localparam [3:0]	RXUL_STOP      = 4'h8;
+		localparam [3:0]	RXUL_WAIT      = 4'h9;
+		localparam [3:0]	RXUL_IDLE      = 4'hf;
+		// }}}
 	// Signal/register declarations
 	// {{{
 	wire	[(TB-1):0]	half_baud;
@@ -121,7 +121,7 @@ module rxuartlite #(
 	if (qq_uart != ck_uart)
 		chg_counter <= 0;
 	else if (chg_counter != { (TB){1'b1} })
-		chg_counter <= chg_counter + 1;
+		chg_counter <= chg_counter + 1'b1;
 	// }}}
 
 	// half_baud_time
@@ -158,7 +158,7 @@ module rxuartlite #(
 			// Data arrives least significant bit first.
 			// By the time this is clocked in, it's what
 			// you'll have.
-			state <= state + 1;
+			state <= state + 1'b1;
 		// }}}
 	end
 	// }}}
diff --git a/fpga_src/uart/txuartlite.v b/fpga_src/uart/txuartlite.v
index b25b707..1f3093d 100644
--- a/fpga_src/uart/txuartlite.v
+++ b/fpga_src/uart/txuartlite.v
@@ -59,10 +59,9 @@ module txuartlite #(
 		// most baud rates, but you can trim it down to save logic if
 		// you would like.  TB is just an abbreviation for TIMING_BITS.
 		parameter	[4:0]	TIMING_BITS = 5'd24,
-		localparam		TB = TIMING_BITS,
 		// CLOCKS_PER_BAUD -- the number of system clocks per baud
 		// interval.
-		parameter	[(TB-1):0]	CLOCKS_PER_BAUD = 8 // 24'd868
+		parameter	[(TIMING_BITS-1):0]	CLOCKS_PER_BAUD = 8 // 24'd868
 		// }}}
 	) (
 		// {{{
@@ -78,6 +77,7 @@ module txuartlite #(
 		// }}}
 	);
 
+		localparam		TB = TIMING_BITS;
 	// Register/net declarations
 	// {{{
 	localparam [3:0]	TXUL_BIT_ZERO  = 4'h0,
@@ -238,7 +238,7 @@ module txuartlite #(
 			// is complete, so we can start on the next byte
 			// exactly 10*CLOCKS_PER_BAUD clocks after we started
 			// the last one
-			baud_counter <= CLOCKS_PER_BAUD - 2;
+			baud_counter <= CLOCKS_PER_BAUD - 2'd2;
 		else // All other states
 			baud_counter <= CLOCKS_PER_BAUD - 1'b1;
 	end
